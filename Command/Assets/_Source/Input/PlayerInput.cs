//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_Source/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Actor"",
            ""id"": ""637e06c8-a609-4c99-8390-b559eb69bbad"",
            ""actions"": [
                {
                    ""name"": ""LKM"",
                    ""type"": ""Button"",
                    ""id"": ""b3f2b4ca-76e5-4a55-8e18-f71baa9e0c92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PKM"",
                    ""type"": ""Button"",
                    ""id"": ""4fd14ab8-1f3c-4d65-b5b5-93e8722ded18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""b84c2684-71db-41e6-8ec3-6406f71c14fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Undo"",
                    ""type"": ""PassThrough"",
                    ""id"": ""700ae177-b25d-42de-967b-67a9ff25ebb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0081a82a-d0af-407b-bf41-41ed9eb28344"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LKM"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2112d75-4ecb-446b-968f-2fe91847d188"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PKM"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e448b7ff-6f91-4eea-a55c-388fcc7910e5"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdc580ce-c066-4a94-9396-dd6e9497a7d8"",
                    ""path"": ""<Keyboard>/leftMeta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d913f864-c515-4a98-86ad-32ce14dfc2b0"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Actor
        m_Actor = asset.FindActionMap("Actor", throwIfNotFound: true);
        m_Actor_LKM = m_Actor.FindAction("LKM", throwIfNotFound: true);
        m_Actor_PKM = m_Actor.FindAction("PKM", throwIfNotFound: true);
        m_Actor_Return = m_Actor.FindAction("Return", throwIfNotFound: true);
        m_Actor_Undo = m_Actor.FindAction("Undo", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Actor
    private readonly InputActionMap m_Actor;
    private IActorActions m_ActorActionsCallbackInterface;
    private readonly InputAction m_Actor_LKM;
    private readonly InputAction m_Actor_PKM;
    private readonly InputAction m_Actor_Return;
    private readonly InputAction m_Actor_Undo;
    public struct ActorActions
    {
        private @PlayerInput m_Wrapper;
        public ActorActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @LKM => m_Wrapper.m_Actor_LKM;
        public InputAction @PKM => m_Wrapper.m_Actor_PKM;
        public InputAction @Return => m_Wrapper.m_Actor_Return;
        public InputAction @Undo => m_Wrapper.m_Actor_Undo;
        public InputActionMap Get() { return m_Wrapper.m_Actor; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActorActions set) { return set.Get(); }
        public void SetCallbacks(IActorActions instance)
        {
            if (m_Wrapper.m_ActorActionsCallbackInterface != null)
            {
                @LKM.started -= m_Wrapper.m_ActorActionsCallbackInterface.OnLKM;
                @LKM.performed -= m_Wrapper.m_ActorActionsCallbackInterface.OnLKM;
                @LKM.canceled -= m_Wrapper.m_ActorActionsCallbackInterface.OnLKM;
                @PKM.started -= m_Wrapper.m_ActorActionsCallbackInterface.OnPKM;
                @PKM.performed -= m_Wrapper.m_ActorActionsCallbackInterface.OnPKM;
                @PKM.canceled -= m_Wrapper.m_ActorActionsCallbackInterface.OnPKM;
                @Return.started -= m_Wrapper.m_ActorActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_ActorActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_ActorActionsCallbackInterface.OnReturn;
                @Undo.started -= m_Wrapper.m_ActorActionsCallbackInterface.OnUndo;
                @Undo.performed -= m_Wrapper.m_ActorActionsCallbackInterface.OnUndo;
                @Undo.canceled -= m_Wrapper.m_ActorActionsCallbackInterface.OnUndo;
            }
            m_Wrapper.m_ActorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LKM.started += instance.OnLKM;
                @LKM.performed += instance.OnLKM;
                @LKM.canceled += instance.OnLKM;
                @PKM.started += instance.OnPKM;
                @PKM.performed += instance.OnPKM;
                @PKM.canceled += instance.OnPKM;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Undo.started += instance.OnUndo;
                @Undo.performed += instance.OnUndo;
                @Undo.canceled += instance.OnUndo;
            }
        }
    }
    public ActorActions @Actor => new ActorActions(this);
    public interface IActorActions
    {
        void OnLKM(InputAction.CallbackContext context);
        void OnPKM(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnUndo(InputAction.CallbackContext context);
    }
}
